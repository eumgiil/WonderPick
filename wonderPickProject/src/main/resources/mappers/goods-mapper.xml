<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="goodsMapper">
  
  <resultMap id="goodsResultSet" type="goods">
  	<result column="board_no" property="boardNo" />
  	<result column="price" property="price" />
  	<result column="draft" property="draft" />
  	<result column="modify_count" property="modifyCount" />
  	<result column="workday" property="workday" />
  	<result column="add_draft" property="addDraft" />
  	<result column="add_modify" property="addModify" />
  	<result column="amount" property="amount" />
  	<result column="goods_category" property="goodsCategory" />
  	<result column="add_info" property="addInfo" />
  	<result column="member_no" property="memberNo" />
  	<result column="board_title" property="boardTitle" />
  	<result column="board_content" property="boardContent" />
  	<result column="create_date" property="createDate" />
  	<result column="board_count" property="boardCount" />
  	<result column="nickname" property="nickName" />
  	<result column="goods_no" property="goodsNo" />
  </resultMap>
  
  
  <resultMap id="reviewResultSet" type="review">
   <result column="review_no" property="reviewNo" />
   <result column="board_no" property="boardNo" />
   <result column="member_no" property="memberNo" />
   <result column="nickname" property="nickname" />
   <result column="star" property="star" />
   <result column="create_date" property="createDate" />
   <result column="origin_name" property="originName" />
   <result column="modify_name" property="modifyName" />
   <result column="board_title" property="boardTitle" />
   <result column="board_content" property="boardContent" />
  </resultMap>
  
  
  <select id="selectListCount" resultType="_int">
	 select
            count(*)
     from
            board
	  where
	        status = 'Y'
	  and
	       board_type = 'G'
  </select>
  <select id="selectGoodsList" resultMap="goodsResultSet">
select
       board_no, 
       board_title, 
       nickname, 
       board_count,
       to_char(create_date, 'YYYY-MM-DD') as "create_date" ,
       price,
       origin_name
  from 
       board b
 join 
      member using (member_no)
 join 
 	 board_image using (board_no)
 join goods using (board_no )
 where
     b.status = 'Y'
and 
    board_type ='G'
order by
      board_no asc
  </select>
  <select id="selectCategoryListCount" resultType="_int">
	 select count(*)
     from board
     join goods using (board_no)
     where status = 'Y'
     and board_type = 'G'
      and goods_category = #{goodsCategory}
	      
  </select>
  <select id="selectCategoryList" resultMap="goodsResultSet">
  select
       board_no, 
       board_title, 
       nickname, 
       board_count,
       to_char(create_date, 'YYYY-MM-DD') as "create_date" ,
       price,
       origin_name
  from 
       board b
 join 
      member using (member_no)
 join 
 	 board_image using (board_no)
 join goods using (board_no )
 where
     b.status = 'Y'
and 
    board_type ='G'
and 
    goods_category = #{goodsCategory}
order by
      board_no asc
  
  
  </select>
  
  <insert id="insertBoard" parameterType="board">
  insert
     into
         board
          (
          board_no,
          member_no,
          board_title,
          board_content,
          board_type
          )
     values
          (
          seq_board_no.nextval,
          #{memberNo},
          #{boardTitle},
          #{boardContent},
          'G'
          )
  </insert>
  
  <insert id="insertGoods" parameterType="goods">
  insert
  into 
      goods
      (
      goods_no,
      price,
      draft,
      modify_count,
      workday,
      add_draft,
      add_modify,
      goods_category
      )
 values
      (
      seq_board_no.currval,
      #{price},
      #{draft},
      #{modifyCount},
      #{workday},
      #{addDraft},
      #{addModify},
      #{goodsCategory}
      )
  </insert>
  <insert id="insertBoardImage" parameterType="boardImage">
  insert 
    into
        boardImage
      (
      board_image_no,
      board_no,
      origin_name,
      modify_name
      )
   values
   (
   seq_boardImg_no.nextval,
   seq_board_no.currval,
   #{originName},
   #{modifyName}
   )
  </insert>
  <update id="increaseCount">
  update
        board
   set
       board_count =  board_count + 1
  where
        board_no = #{boardNo}
    and
        status = 'Y'
  </update>
  <select id="selectGoods" resultMap="goodsResultSet">
  select
  		nickname,
  		board_title,
  		board_content,
      	price,
      	draft,
      	modify_count,
      	WORKDAY,
      	add_draft,
      	add_modify,
      	goods_category
 from goods
 join board using (board_no)
 join member using(member_no)
 where board_no = #{boardNo}
  </select>
  <select id="selectReviewCount" resultType="_int" >
	select 
	       * 
	 from 
	 		review
	join 
		  board using(board_no)
	where 
		 board_no = #{boardNo}
  </select>
  <select id="selectReviewList" resultMap="reviewResultSet">
select
       nickname
      ,board_content
      ,star
      ,create_date
  from
       board b
  join
       member m using(member_no)
  join
       review using(member_no)
 where 
 	   board_type = 'R'
   and
       member_no in (select
                           member_no
                      from
                           review r
                     where
                           board_no = #{boardNo})
  </select>
  <select id="selectReplyList" resultType="reply">
  select
         nickname nickname,
         content content,
         to_char(create_date, 'YYYY-MM-DD') as "createDate"
 	from  reply
  	join  member using (member_no)
	where board_no = #{boardNo}
 	order 
 	   by 
 	       create_date desc
  </select>
  <select id="selectReplyListCount" resultType="_int">
  select 
  		count(*) 
   from 
        reply 
 where 
       board_no = #{boardNo}
  
  </select>
  <insert id="insertReply" parameterType="reply">
  insert
    into
        reply
                 (
               reply_no, 
               board_no,
               member_no,
               content
                   ) 
               values
                  (
                seq_reply_no.nextval,
               #{boardNo},
               #{memberNo},
               #{content}
                   )
  </insert>
  <select id="selectReReplyList" resultType="reReply">
	select nickname , 
		   content
	from 
	      re_reply
	join 
	      member using (member_no)
	where 
	      reply_no = #{replyNo}
  
  </select>
  <select id="selectHeartList" resultType="heart">
  select *
	from 
		  heart
	where 
	      member_no = #{memberNo}
  </select>
 
 
 
  



</mapper>

